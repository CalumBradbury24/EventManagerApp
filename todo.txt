A website where someone can create an event(s) and others can sign up for it. 
//TODO
- [x] build log out functionality
- [x] Splashscreen 
- [ ] Logged in home page
    - [ ] create event
    - [ ] my account
    - [ ] my events - filter by all, historic and upcoming
- [x] FAQs page - allow user to ask questions
- [ ] Contact Us page - set up emailing system
- [ ] whats on page - if logged in can see and sign up for everything. If not signed in can just view public (non-private) events
- [ ] Featured events - a page of a few events that are featured (paid to be there?)
- [ ] How it works page - explanation of what the site is and what can be done on there etc
- [ ] Reset password functionality
- [x] bycrypt passwords
- [x] Add nice'please log in' screen when user accesses page whilst not logged in
- [ ] dont let user access login function/page if they are already logged in
- [x] set up front-end are you sure? modal for submissions
- [x] set up validator.js

//TODO short term
- [x] Add search bar to header.
- [ ] fix styling for 'choose file' button and text when uploading user picture (fix styling for this page in general (especially the save button and maybe the input boxes)) - pending redesign
- [x] finish modal
- [x] build FAQs page
- [x] Sort proper colour scheme out and redesign Splashscreen
- [ ] design home page (logged in)
- [x] Refactor for config.js, helpers etc, add api request timeout function 
 

Features
- [ ] Create event (public or private)
- [ ] Public - everyone signed in can see and sign up
- [ ] Private only invited people can see and sign up
- [ ] Search events (additionally search by filters such as distance from location, type of event etc)
- [ ] Users can add comments
- [ ] A user can only delete their own events, remove people from the invites
- [ ] An admin can delete any/all events
- [ ] When creating an event a user is asked for a nice picture/advertising image that represents it (otherwise a stock image is selected based on some keywords)


Extra To dos
- [ ] Log authentication events
- [ ] Implement security
- [ ] Implement testing

Nice to haves
- [ ] filter events by distance etc and have google maps of locations
- [ ] Users can share events to Facebook/Twitter via link etc

//Base is always rendered except for specific seperate pages that dont use the header and footer (faqs etc)
//When a user makes a request to a page that requires they be logged in the backend checks their jwt(and gets userID from it),
//fetches the current user based on that ID and attaches it to the req.user object so that req.user exists on the backend

//isLoggedIn is used to validate a user is logged in and attach their details to pug to display on front-end
//protect is used to validate user on back-end and attach req.user to the request object